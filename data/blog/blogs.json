[
  {
	"id": 1,
	"title": "Introduction to Large Language Models and Transformer Architecture",
	"description": "Large language models are a type of neural network that can be trained to perform a variety of natural language processing tasks.",
	"slug": "introduction-to-large-language-models-and-transformer-architecture",
	"thumbnail": "/blog/thumbnails/introduction-to-large-language-models-and-transformer-architecture.webp",
	"view_count": 0,
	"created_at": "2024-03-02T16:22:48.255Z",
	"updated_at": "2024-03-02T16:22:48.255Z",
	"user_id": 1,
	"is_published": true,
	"tags": "nlp, transformer, llms",
	"category": "Machine Learning & Deep Learning"
  },
  {
	"id": 2,
	"title": "Preparing Text Data for Transformers: Tokenization, Mapping and Padding",
	"description": "Transformers require a specific input format, which includes tokenization, mapping and padding. This article explains how to prepare text data for transformer models.",
	"slug": "preparing-text-data-for-transformers-tokenization-mapping-and-padding",
	"thumbnail": "/blog/thumbnails/preparing-text-data-for-transformers-tokenization-mapping-and-padding.png",
	"view_count": 0,
	"created_at": "2024-03-02T22:22:48.255Z",
	"updated_at": "2024-03-02T22:22:48.255Z",
	"user_id": 1,
	"is_published": true,
	"tags": "nlp, transformer, tokenization, padding, mapping, llms",
	"category": "Machine Learning & Deep Learning"
  },
  {
	"id": 3,
	"title": "Cloudflare ditched NGINX and open-sourced Pingora",
	"description": "Cloudflare has open-sourced Pingora, a high-performance HTTP server that is designed to be a drop-in replacement for NGINX.",
	"slug": "cloudflare-ditched-nginx-and-open-sourced-pingora",
	"thumbnail": "/blog/thumbnails/cloudflare-ditched-nginx-and-open-sourced-pingora.png",
	"view_count": 0,
	"created_at": "2024-03-03T14:11:48",
	"updated_at": "2024-03-03T14:11:48",
	"user_id": 1,
	"is_published": true,
	"tags": "cloudflare, nginx, pingora, proxy",
	"category": "Web Development"
  },
  {
	"id": 4,
	"title": "Fine-Tuning Large Language Models (LLMs)",
	"description": "We start by introducing key FT concepts and techniques, then finish with a concrete example of how to fine-tune a model (locally) using Python and Hugging Faceâ€™s software ecosystem.",
	"slug": "fine-tuning-large-language-models-llms",
	"thumbnail": "/blog/thumbnails/fine-tuning-large-language-models-llms.png",
	"view_count": 0,
	"created_at": "2024-03-03T16:56:48",
	"updated_at": "2024-03-03T16:56:48",
	"user_id": 1,
	"is_published": true,
	"tags": "nlp, transformer, llms, fine-tuning, peft, lora",
	"category": "Machine Learning & Deep Learning"
  }, 
  {
	"id": 5,
	"title": "Retrieval Augmented Generation (RAG)",
	"description": "Retrieval augmented generation (RAG) is an architecture that provides the most relevant and contextually-important proprietary, private or dynamic data to your Generative AI application's large language model (LLM) when it is performing tasks to enhance its accuracy and performance.",
	"slug": "retrieval-augmented-generation-rag",
	"thumbnail": "/blog/thumbnails/retrieval-augmented-generation-rag.png",
	"view_count": 0,
	"created_at": "2024-03-03T23:56:48",
	"updated_at": "2024-03-03T23:56:48",
	"user_id": 1,
	"is_published": true,
	"tags": "nlp, llms, rag, retrieval, generation, generativeai",
	"category": "Machine Learning & Deep Learning"
  }, {
	"id": 6,
	"title": "Design a Payment System",
	"description": "Implementing a payment system is not a leisurely task. Reliability and correctness are critical. Furthermore, successful business geenrate a lot of payment requests as they scale. Since even a small amount of downtime could mean a lot of lost revenue, it is important to design a payment system that is highly available and fault-tolerant. In this article, we will discuss the design of a payment system that is highly available and fault-tolerant.",
	"slug": "design-a-payment-system",
	"thumbnail": "/blog/thumbnails/design-a-payment-system.png",
	"view_count": 0,
	"created_at": "2024-03-04T14:56:48",
	"updated_at": "2024-03-04T14:56:48",
	"user_id": 1,
	"is_published": true,
	"tags": "system-design, payment, transactions",
	"category": "Web Development"
  },
  {
	"id": 7,
	"title": "Explaining CREATE INDEX CONCURRENTLY",
	"description": "This technical blog explains how CREATE INDEX CONCURRENTLY (CIC) works and how it manages to avoid locking the table from updates. A unique distinguishing factor of CIC is that it can build a new index on the table, without blocking it from updates/inserts/deletes.",
	"slug": "explaining-create-index-concurrently",
	"thumbnail": "/blog/thumbnails/explaining-create-index-concurrently.png",
	"view_count": 0,
	"created_at": "2024-03-04T23:56:48",
	"updated_at": "2024-03-04T23:56:48",
	"user_id": 1,
	"is_published": true,
	"tags": "postgresql, indexing, create-index-concurrently, hot, heap-only-tuple",
	"category": "Databases"
  },
  {
	"id": 8,
	"title": "Introducing txtai, the all-in-one embeddings database",
	"description": "txtai is an all-in-one embeddings database for semantic search, LLM orchestration and language model workflows.",
	"slug": "introducing-txtai-the-all-in-one-embeddings-database",
	"thumbnail": "/blog/thumbnails/introducing-txtai-the-all-in-one-embeddings-database.webp",
	"view_count": 0,
	"created_at": "2024-03-05T23:56:48",
	"updated_at": "2024-03-05T23:56:48",
	"user_id": 1,
	"is_published": true,
	"tags": "nlp, llms, txtai, embeddings, semantic-search, vector-database",
	"category": "Machine Learning & Deep Learning"
  },
  {
	"id": 9,
	"title": "How does Vector Database work?",
	"description": "A vector database indexes and stores vector embeddings for fast retrieval and similarity search, with capabilities like CRUD operations, metadata filtering, horizontal scaling, and serverless. This article explains how vector databases work and how they can be used for semantic search and similarity matching.",
	"slug": "how-does-vector-database-work",
	"thumbnail": "/blog/thumbnails/how-does-vector-database-work.png",
	"view_count": 0,
	"created_at": "2024-03-06T23:56:48",
	"updated_at": "2024-03-06T23:56:48",
	"user_id": 1,
	"is_published": true,
	"tags": "nlp, llms, embeddings, semantic-search, vector-database, vector-indexing",
	"category": "Machine Learning & Deep Learning"
  },
  {
	"id": 10,
	"title": "A first intro to Complex RAG (Retrieval Augmented Generation)",
	"description": "In this article, we discuss various technical considerations when implementing RAG, exploring the concepts of chunking, query augmentation, hierarchies, multi-hop reasoning, and knowledge graphs. We also discuss unsolved problems & opportunities in the RAG infrastructure space, and introduce some infrastructure solutions for building RAG pipelines.",
	"slug": "a-first-intro-to-complex-rag-retrieval-augmented-generation",
	"thumbnail": "/blog/thumbnails/a-first-intro-to-complex-rag-retrieval-augmented-generation.webp",
	"view_count": 0,
	"created_at": "2024-03-09T23:56:48",
	"updated_at": "2024-03-09T23:56:48",
	"user_id": 1,
	"is_published": true,
	"tags": "nlp, llms, rag, retrieval, generation, generativeai, complex-rag",
	"category": "Machine Learning & Deep Learning"
  },
  {
	"id": 11,
	"title": "How Transformers Work: A Detailed Exploration of Transformer Architecture",
	"description": "Explore the architecture of Transformers, the models that have revolutionized data handling through self-attention mechanisms.",
	"slug": "how-transformers-work-a-detailed-exploration-of-transformer-architecture",
	"thumbnail": "/blog/thumbnails/how-transformers-work-a-detailed-exploration-of-transformer-architecture.png",
	"view_count": 0,
	"created_at": "2024-04-01T23:56:48",
	"updated_at": "2024-04-01T23:56:48",
	"user_id": 1,
	"is_published": true,
	"tags": "nlp, llms, transformer, architecture",
	"category": "Machine Learning & Deep Learning"
  },
  {
	"id": 12,
	"title": "Linear Algebra explained in the context of deep learning",
	"description": "In this article, I have used top down manner to explain linear algebra for deep learning. First providing the applications and uses and then drilling down to provide the concepts.",
	"slug": "linear-algebra-explained-in-the-context-of-deep-learning",
	"thumbnail": "/blog/thumbnails/linear-algebra-explained-in-the-context-of-deep-learning.png",
	"view_count": 0,
	"created_at": "2024-04-13T23:56:48",
	"updated_at": "2024-04-1323:56:48",
	"user_id": 1,
	"is_published": true,
	"tags": "linear-algebra, deep-learning, mathematics",
	"category": "Machine Learning & Deep Learning"
  },
  {
	"id": 13,
	"title": "Understanding Backpropagation Algorithm",
	"description": "In this article, I would like to go over the mathematical process of training and optimizing a simple 4-layer neural network. I believe this would help the reader understand how backpropagation works as well as realize its importance.",
	"slug": "understanding-backpropagation-algorithm",
	"thumbnail": "/blog/thumbnails/understanding-backpropagation-algorithm.jpg",
	"view_count": 0,
	"created_at": "2024-04-14T23:56:48",
	"updated_at": "2024-04-14T23:56:48",
	"user_id": 1,
	"is_published": true,
	"tags": "backpropagation, neural-networks, deep-learning",
	"category": "Machine Learning & Deep Learning"
  },
  {
	"id": 14,
	"title": "OrioleDB: Solving PostgreSQL wicked problems",
	"description": "Oriole is a table storage extension for Postgres. It is designed to be a drop-in replacement for Postgres' existing storage engine. In this article, we discuss how OrioleDB solves some of the wicked problems in PostgreSQL.",
	"slug": "orioledb-solving-postgresql-wicked-problems",
	"thumbnail": "/blog/thumbnails/orioledb-solving-postgresql-wicked-problems.png",
	"view_count": 0,
	"created_at": "2024-04-15T23:56:48",
	"updated_at": "2024-04-15T23:56:48",
	"user_id": 1,
	"is_published": true,
	"tags": "system-design, key-value-store, distributed-systems",
	"category": "Databases"
  }
]